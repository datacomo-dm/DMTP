# 这是公用分组统计程序的参数文件,用于控制分组统计行为的细节.
# 公用分组统计程序是一个基于wdbi接口库的本地运算统计加速程序,使用本地内存作表的连接和分组统计计算.具备参数交叉循环功能
#   目前支持的数据库类型有:
#       Oracle 8i/9i/10g 
#	DB2 8/9 
#	Sybase ASE 12
#	DT 
#    支持短消息通知.
# 注意:
#   变量名称是全局的,不允许重复
# 参考: http://130.86.2.146/mwiki/index.php/%E5%8F%82%E6%95%B0%E6%96%87%E4%BB%B6%E6%A0%B7%E6%9C%AC

[基本选项]

错误时继续循环=0

#单位为分钟,0表示不重试
错误重试间隔=0

#是否需要多表关联统计
引用数据=1

# 0：不通知 1：错误通知，发生错误时通知 2：简要通知，发生错误或全部执行完成时通知 
# 3: 详细通知,包括执行的每个阶段
#  通知级别向下包含,例如2级包含错误通知,3级保护简要通知和错误通知
# 模式3时,夜间也发送通知,其余只在早8:00至晚10:00之间通知.
短信通知=2

#短信组的名称在 130.86.12.80:1521/dtagt 数据库的dtuser方案下,包含以下表:
#  sms_group (组名称和ID)
#  sms_user (组成员)
#  
短信组=统计测试1

#
#日志方式
#
日志文件=bigroup/cdr_subscrb/200607_10
日志回显=1

统计标题=7月后GC话单统计(到用户)

#是否详细输出日志信息,0 否,1 是
详细输出=0

### 考虑加到输出部分 ？？
#只最后一次成功运行的参数位置
#最后运行位置=
#最后运行时间=

###简化设计，咱不考虑
#准备sql中的变量. 执行计算前需要的操作
#变量=' '
#准备sql='   '

[源数据]
#源数据按数据块方式并行处理，不需要一次取回全部数据
记录数=50000

#sql中使用的变量
变量='src_tablename part_id1'
连接参数='root cdr0930 dtagt80 odbc'

#有引用数据时需要配置排序字段,没有引用数据时忽略
引用关联字段=svcnum

SQL='select part_id1,subscrbid,msisdn svcnum,calltype,roamtype,islocal,tolltype,term_type,termphonetype, 
 (prcpln_basfee+prcpln_LOCADDFEE+prcpln_TOLLFEE+prcpln_TOLLADDFEE+DISCNTbasfee+DISCNTTOLLFEE+DISCNTADDFEE+prcpln_INFOFEE+DISCNTINFOFEE)>0.001 flag, 
 prcpln_basfee/1000 prcpln_basfee,prcpln_LOCADDFEE/1000 prcpln_LOCADDFEE,prcpln_TOLLFEE/1000 prcpln_TOLLFEE, 
 prcpln_TOLLADDFEE/1000 prcpln_TOLLADDFEE ,DISCNTbasfee/1000 DISCNTbasfee,DISCNTTOLLFEE/1000 DISCNTTOLLFEE, 
 DISCNTADDFEE/1000 DISCNTADDFEE,prcpln_INFOFEE/1000 prcpln_INFOFEE,DISCNTINFOFEE/1000 DISCNTINFOFEE , 
 (prcpln_basfee+prcpln_LOCADDFEE+prcpln_TOLLFEE+prcpln_TOLLADDFEE+DISCNTbasfee+DISCNTTOLLFEE+DISCNTADDFEE+prcpln_INFOFEE+DISCNTINFOFEE)/1000 sumfee, 
 ctimes,ltimes,calltimelen  
 from dest.%s where part_id1=\'%s\' '

分组字段='part_id1,subscrbid,svcnum,calltype,roamtype,islocal,tolltype,term_type,termphonetype,flag'

汇总字段='prcpln_basfee,prcpln_LOCADDFEE,prcpln_TOLLFEE,prcpln_TOLLADDFEE,DISCNTbasfee,DISCNTTOLLFEE,DISCNTADDFEE,prcpln_INFOFEE,DISCNTINFOFEE,sumfee,ctimes,ltimes,calltimelen'


[引用数据]
#引用数据需要一次取回全部数据，如果数据量太大，需要按分区拆分数据，分多次处理
记录数=3000000

#默认是用源数据的连接，可以不写(注视掉下面这行)
连接参数='wanggsh wanggsh //130.86.1.2:1526/obs9i oracle'

#sql中的变量. 无论源数据是否使用变量循环控制方式,引用数据中的变量可以为空!
变量='ref_areaid'

SQL='select svcnum,svcstat from obs.tab_subscrb where areaid=\'%s\' '

#排序字段必须与源数据中的引用关联字段 类型、顺序一致

排序字段 = 'svcnum'

#分组字段加入源数据分组中
#引用数据的分组字段为可选参数,例如,引用数据仅用作过滤源数据的条件.
分组字段='svcstat'


[结果数据]
#结果数据要能够存放全部数据，如果数据量太大，需要按分区拆分数据，分多次处理
记录数=12000000

#这里的变量只能用来指定结果表名中的变化部分，且必须与其他变量连接
变量='res_GORC res_MONTH'
结果表名='tab_%svoicdr_%s_st'
连接参数='ods_temp ods_temp //130.86.12.30:1521/ubisp.ynunicom.com oracle'

#重建 1 /首次重建 2/追加 3 /清理 4/ (4暂不支持)
#如果是清理,还需要写清理条件
#如果是追加和清理方式，而结果表不存在，则自动建立
#如果是重建方式，则不论结果表是否存在，都重新建立。
#
#首次重建,统计进程循环过程中第一次使用表是重建. 注意只有连续使用表的第一次重建,也就是说,即便
#  是第二次使用表,但紧接的前一次表名不同,则会删除重建.
结果集存储=2

#清理条件可以使用${xxx}从结果集中选择字段,默认取第一行的值.提交附加在 delete from 
清理条件=' where areaid=\'${areaid}\' and part_id1=${part_id1}  '

#可以分批次清理提交
清理提交记录= 10000

[变量]
#以下变量的顺序决定了交叉循环的顺序.

src_tablename='tab_gsmvoicdr4 tab_gsmvoicdr3 tab_gsmvoicdr2 tab_gsmvoicdr1 tab_cdmavoicdr4 tab_cdmavoicdr3 tab_cdmavoicdr2 tab_cdmavoicdr1 '
part_id1='730 731 732 733 734 735 736 860 861 862 863 864 865 866 867 869'

#conn:<parameter_name> : no cross loop between params.
ref_areaid='conn:part_id1 086730 086731 086732 086733 086734 086735 086736 086860 086861 086862 086863 086864 086865 086866 086867 086869'
#xq='IQ  NQ OQ KQ LQ MQ HQ AQ CQ BQ GQ FQ EQ DQ JQ PQ '
#LDC='0692 0875 0876 0883 0886 0887 0691 0871 0873 0872 0888 0878 0877 0874 0870 0879 '
#ODF_CLIENTID='2004 2005 2011 2017 2018 2016 2006 2008 2015 2013 2007 2012 2010 2003 2014 2009 '
#areaname='conn:part_id1 德宏 保山 文山 临沧 怒江 迪庆 版纳 昆明 红河 大理 丽江 楚雄 玉溪 曲靖 昭通 思茅'
res_GORC='conn:src_tablename gsm gsm gsm gsm cdma cdma cdma cdma'
res_MONTH='conn:src_tablename 200610 200609 200608 200607 200610 200609 200608 200607'
